package com.shinhan.week3.day11.컬렉션;

import java.util.*;

import com.shinhan.week3.day10.멀티스레드.practice.Account;

public class CollectionTest {

	public static void main(String[] args) {
		f4();

	}

	private static void f4() {
		//Set : 순서 없고, 중복이 불가능 interface => 구현class : HashSet, TreeSet(순서있음)
		Set<String> data = new TreeSet<>(); //Set > HashSet 상위객체
		data.add("월");
		data.add("화");
		data.add("수");
		data.add("수");//add안됨(중복check)
		data.add("월");//add안됨(중복check)
		
		System.out.println("개수: " + data.size());
		
		//향상For
		System.out.println("=====일반for 불가=====");
		System.out.println("=====향상for====");
		for(String s : data) {
			System.out.println(s);
		}
		
		System.out.println("=====반복자이용(Iterator)=====");
		Iterator<String> it = data.iterator();
		
		while(it.hasNext()) {
			System.err.println(it.next());
		}
	}	
	
	private static void f3() {
		//Set : 순서 없고, 중복이 불가능 interface => 구현class : HashSet, TreeSet(순서있음)
		Set<String> data = new HashSet<>(); //Set > HashSet 상위객체
		data.add("월");
		data.add("화");
		data.add("수");
		data.add("수");//add안됨(중복check)
		data.add("월");//add안됨(중복check)
		
		System.out.println("개수: " + data.size());
		
		//향상For
		System.out.println("=====일반for 불가=====");
		System.out.println("=====향상for====");
		for(String s : data) {
			System.out.println(s);
		}
		
		System.out.println("=====반복자이용(Iterator)=====");
		Iterator<String> it = data.iterator();
		
		while(it.hasNext()) {
			System.err.println(it.next());
		}
	}

	private static void f2() {
		//List : 순서있고 중복가능 => 구현class : ArrayList, LinkedList, Vector
		//ArrayList : 연속공간 필요, 공간이 부족하면 자동증가, 중간 삽입or삭제시 비효율적(당기거나 밀거나 이동이 있음)
		//LinkedList : 연속공간 불필요, 전요소나 후요소의 주소기억(공간차지), 중간 삽입or삭제시 효율적
		//Vector : Multi Thread에서 동기처리 가능
		
		List<String> data1 = new ArrayList<>();
		List<String> data2 = new LinkedList<>();
		List<String> data3 = new Vector<>();
		
		insertData(data1);
		insertData(data2);
		insertData(data3);
		
		displayData(data1, "Array");
		displayData(data2, "Linked");
		displayData(data3, "Vector");
		//일반For
		/*
		System.out.println("=====일반for====");
		for(int i=0 ; i<data.size() ; i++) {
			System.out.println(data.get(i));
		}
		
		//향상For
		System.out.println("=====향상for====");
		for(String s : data) {
			System.out.println(s);
		}
		*/
	}
	
	private static void displayData(List<String> data, String title) {
		System.out.println(title + "=====일반for====");
		for(int i=0 ; i<data.size() ; i++) {
			System.out.println(data.get(i));
		}
		
		//향상For
		System.out.println(title + "=====향상for====");
		for(String s : data) {
			System.out.println(s);
		}
		
	}

	private static void insertData(List<String> data) {
		data.add("월");
		data.add("화");
		data.add("수");
		data.add("목");
		
	}

	private static void f1() {
		//List : 순서있고 중복가능 => 구현class ArrayList, LinkedList, Vecto
		ArrayList data = new ArrayList();
		
		data.add("문자");
		data.add(123);
		data.add(new Account());
		
		String a = (String)data.get(0);
		int b = (Integer)data.get(1);
		Account acc = (Account)data.get(2);
	}

}
