package com.shinhan.week3.da12;

import java.util.Collection;
import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;
import java.util.TreeSet;
import java.util.Vector;

//Collection(상위)

//List : add한 순서 있음, index가능, 중복가능 
//=> ArrayList(중간 삽입 및 삭제시 비효율적, 맨앞, 뒤 추가는 효율), 
//=> LinkedList(전, 후 데이터 주소가짐, 공간차지, 중간 삽입 및 삭제 효율적)
//=> Vector(동기화 지원, 멀테스레드 환경에 안정적)

//Set : 순서없음, 중복불가 =>HashSet(hashcode(), equals()), 
					 //=>TreeSet(add시 sort => compareTo and implements comparable  필요)

//Map : 키와 값의 쌍(entry), 키는 set이다. =>HashMap, HashTable, TreeMap, Properties
public class Review {

	public static void main(String[] args) {
		f5();

	}
	
	//Map
	private static void f5() {
		Map<String, Integer> map = new HashMap<>();
		map.put("A", 100);
		map.put("A", 200); //덮어쓰기
		map.put("B", 100);
		map.put("C", 100);
		map.put("D", 100);
		
		print(map.keySet());
		print(map);
		
	}

	private static void print(Map<String, Integer> map) {
		System.out.println("===========keyset");
		for(String s : map.keySet()) {
			System.out.println(s);
		}
	}

	//Set
		private static void f4() {
			//comparable 필요
			Set<Student> data = new TreeSet<>();
			
			data.add(new Student("A", 70));
			data.add(new Student("A", 70));
			data.add(new Student("B", 80));
			data.add(new Student("C", 70));
			data.add(new Student("B", 80));
			
			print(data);
		}
	
	//Set
	private static void f3() {
		Set<Student> data = new HashSet<>();
		
		data.add(new Student("A", 70));
		data.add(new Student("A", 70));
		data.add(new Student("B", 80));
		data.add(new Student("C", 60));
		data.add(new Student("B", 80));
		
		print(data);
	}

	private static void print(Set<Student> data) {
		System.out.println("===========Collection<String>");
		for(Student st : data) {
			System.out.println(st);
		}
		
	}

	//Set
	private static void f2() {
		Set<String> data = new HashSet<>();

		data.add("월");
		data.add("월");
		data.add("수");
		data.add("수");

		print(data);

	}

	//List
	private static void f1() {
//		List<String> data = new ArrayList<>();
//		List<String> data = new LinkedList<>();
		List<String> data = new Vector<>();

		data.add("월");
		data.add("월");
		data.add("수");
		data.add("수");

		print(data);
	}

	private static void print(Collection<String> data) {
		for (String s : data) {
			System.out.println(s);
		}

	}

}
