package com.shinhan.day06;

public class InheritanceTest3 {

	public static void main(String[] args) {
		method4();

	}
	//OOP 특징 : 캡슐화(정보은닉,private), 상속(기존class물려받음, 수정가능, 추가가능)
	//		    다형성(사용은 같지만 결과는 다르다)
	private static void method4() {
		Account acc1 = new Account("112", "김", 1000);
		CheckingAccount acc2 = new CheckingAccount("333", "양", 2000, "66-77");
		CreditLineAccount acc3 = new CreditLineAccount("444", "박", 3000, 2000);
		BonusPointAccount acc4 = new BonusPointAccount("555", "정", 4000, 4);
		
		System.out.println(acc1);
		System.out.println(acc2);
		System.out.println(acc3);
		System.out.println(acc4);
	}

	private static void method3() {
		CreditLineAccount acc2 = new CreditLineAccount("112", "현상", 2000, 1000);
		acc1.deposit(5000);
		
		System.out.println(acc1.getBalance());
		System.out.println(acc1.());
		
	}

	private static void method2() {
		CreditLineAccount acc2 = new CreditLineAccount("112", "현상", 2000, 1000);
		acc2.deposit(2000);
		int amount = acc2.withdraw(5000);
		System.out.println("출금액: " + amount);
	}

	private static void method1() {
		CheckingAccount acc1 = new CheckingAccount("112-234", "홍길동", 1000, "77-88");
		acc1.deposit(2000);
		int amount = acc1.withdraw(1200);
		System.out.println("출금액: " + amount);
		System.out.println("잔고: " + acc1.getBalance());
		amount = acc1.pay("77-88", 800);
		System.out.println("카드로인출 : " + amount);
		amount = acc1.pay("77-98", 800);
		System.out.println("카드로인출 : " + amount);
	}

}
