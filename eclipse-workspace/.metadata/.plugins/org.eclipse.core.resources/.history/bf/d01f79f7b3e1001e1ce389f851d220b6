package com.shinhan.day03;

import java.util.Arrays;

public class ArrayTest {

	public static void main(String[] args) {
		//call();
		//call2();
		//call3();
		//call4();
		//call5(); //2차원 배열
		//call6();
		//call7();
		call8();
	}
	
	private static void call8() {
		//배열 선언 + 배열 생성 + 초기화
		String[] arr = new String[] {"자바", "DB", "WEB", "Framework"}; //시작값만 스택 영역 나머지 힙 영역에 만들어짐
		String[] arr2 = new String[4]; //null로 초기화 된다.
		arr2[0] = "자바";
		arr2[1] = "DB";
		arr2[2] = "WEB";
		arr2[3] = "Framework";
		
		arr[0] += "";
		
		for(int i=0 ; i<arr.length ; i++) {
			System.out.println(arr[i] + "---" + arr2[i] + "---" +
							(arr[i]==arr2[i]?"같다":"같지않다"));
		}
		
	}

	private static void call7() {
		int[][]	scores = new int[][] {{10, 20, 30, 40}, {1, 2, 3}};
		int total = 0;
		
		for(int i=0 ; i<scores.length ; i++) {
			for(int j=0 ; j<scores[i].length ; j++) {
				total += scores[i][j];
				System.out.printf("[%d][%d]=>%d", i, j, scores[i][j]);
			}
			System.out.println(); //줄 바꿈
		}
		System.out.println(total);
	}

	private static void call6() {
		char[][] arr = {{'A', 'B', 'C'}, {'가', '나'}, {'a', 'b', 'c', 'd'}};
		
		for(int i=0 ; i<arr.length ; i++) {
			//System.out.println(Arrays.toString(arr[i])); //확인용
			for(int j=0 ; j<arr[i].length ; j++) {
				System.out.print(arr[i][j] + "\t");
			}
			System.out.println(); //줄 바꿈
		}
		
	}

	private static void call5() {
		//2차원 배열
		//1.배열 선언
		int[][] arr; //가장 선호
		int[] arr2[];
		int arr3[][];
		//선언 + 생성 + 초기화
		int[][] arr4 = new int[][] {{99,88},{77,66,55}};
		
		//2.배열 생성
		arr = new int[3][4]; //3행 4열
		arr2 = new int[3][]; //1차 배열은 반드시 갯수 지정
		//배열 생성 + 초기화
		arr3 = new int[][] {{10, 20, 30}, {40, 50}, {60,70,80}, {90}};
		
		//3.배열 사용
		System.out.println(arr.length);
		System.out.println(arr[0].length);
		System.out.println(arr4[0][1]);
		System.out.println(arr3[2][2]);
	}

	private static void call4() {
		//1. 배열 선언 
		int[] arr;
		
		//2.배열 생성 + 초기화
		//arr = {10, 20, 30, 40, 50}; //배열 선언과 생성 초기화는 한번에 가능 but 선언후 생성+초기화는 안됨
		arr = new int[] {20, 40, 60};
		System.out.println(arr.length); ///'aaa'.length() 기능이 있을 땐 ()
		for(int index=0;index<arr.length;index++) { //범위....index<=arr.length 하면 index 범위를 벗어남
			System.out.println(index + "번째 " + arr[index]);
		}
		
	}

	
	private static void call3() {
		//1. 배열 선언 + 배열 생성 + 초기화
		int[] arr = new int[] {10, 20, 30, 40, 50};
		//int[] arr = {10, 20, 30, 40, 50}; new int[] 생략가능
		for(int index=0;index<arr.length;index++) { //범위....index<=arr.length 하면 index 범위를 벗어남
			System.out.println(index + "번째 " + arr[index]);
		}
		
	}

	private static void call2() {
		//1. 배열 선언 + 배열 생성
		int[] arr = new int[10];
		for(int index=0;index<arr.length;index++) { //범위....index<=arr.length 하면 index 범위를 벗어남
			System.out.println(index + "번째 " + arr[index]);
		}
		
	}

	private static void call() {
		//변수 : 하나의 값을 저장하기 위한 기억장소 이름
		//같은 타입의 값을 여러개 저장하고자 한다. (하나의 이름으로 연속공간을 index로 참조한다.)
		//index는 반드시 0부터 시작한다.
		
		//1. 배열 선언
		int[] arr1; //자바는 타입에 [] 쓰는것을 선호한다.
		double arr2[];
		boolean arr3[];
		char[] arr4;
		String[] arr5;
		
		//2. 배열 생성......반드시 개수를 알아야한다.(배열은 고정이기 떄문).....자동으로 초기화됨
		//정수 -> 0 , 실수 -> 0.0, boolean -> false, char -> ' ', 참조형 -> null
		arr1 = new int[10];
		arr2 = new double[10];
		arr3 = new boolean[10];
		arr4 = new char[10];
		arr5 = new String[10];
		
		//3. 배열 사용
		System.out.println(arr1[0]);
		System.out.println(arr2[0]);
		System.out.println(arr3[0]);
		System.out.println("*" + arr4[0] + "*");
		System.out.println(arr5[0]);
		
	}

}
